Data structure:
A dictionary to hold {<username>, <password>, <logged>, <name>, <role>, <course>, <lab>, <information>}

Two required methods:
    class Project:
        def command(userString): #userString is what the user typed on the command line
            return "" #the return value will be the applications response

        def done():
            return True; #will let user know that they're done

Support commands are:
1, add <username> <password>
    - Creates a new user with the given username if no such user currently exists, responding with "User <username> added."
    - If that user already exists the response is "Failed. User exists."
2, login <username> <password>
    - If the user exists and the password matches, that user is recognized as the current user and the response is "<username> logged in." and logged boolean is set to true
    - Otherwise the response is "Failed. Username or password invalid." and no change to the current user is made.
3, logout
    - User has no access to commands and the response is "<Username> logged out"
    - The logged boolean is set to false
4, remove <name>
    - Removes information of a user from the database and the response is "<name> has been removed"
    - If <name> doesn't exist the response is "<name> doesn't exist!"
5, roles <name> <role>
    - Changes the role of the user
6, createcourse <course>
    - Makes a new course
7, createlab <lab>
    - Makes a new lab section
8, assigncourse <name> <course>
    - Assigns a user to a course
9, assignlab <name> <lab>
    - Assigns a user to a lab section
10, notify <name>
    - Sends out an email to <name>
11, edit <name>
    - Edits the information of <name>
12, show <name>
    - Shows public information to the requester
    - Shows private information only to the Supervisor and the Administrator
13, quit
    -The session ends.